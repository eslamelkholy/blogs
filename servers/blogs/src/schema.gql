# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PostViews {
  postId: String!
  userId: String!
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Post {
  id: String!
  title: String!
  subTitle: String!
  text: String!
  segmentType: String!
  postStatus: String!
  totalPostViews: Float!
  userId: String!
  created_at: DateTime!
  updated_at: DateTime!
  user: User!
}

type User {
  id: String!
  name: String!
  email: String!
  role: String!
  created_at: DateTime!
  updated_at: DateTime!
  posts: [Post!]
}

type PageMetaDto {
  page: Float!
  take: Float!
  itemCount: Float!
  pageCount: Float!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type UserResponse {
  entities: [User!]
  pagination: PageMetaDto!
}

type PostResponse {
  entities: [Post!]
  pagination: PageMetaDto!
}

type Query {
  FindAllUsers: [User!]!
  getUserByEmail(email: String!): User!
  userSearch(email: String!, pageOptionDto: PageOptionsDto!): UserResponse!
  GetUserPosts(pageOptionDto: PageOptionsDto!, userId: String!): PostResponse!
  GetProfilePosts(pageOptionDto: PageOptionsDto!, userId: String!): PostResponse!
}

input PageOptionsDto {
  order: String! = "ASC"
  page: Float! = 1
  take: Float! = 10
}

type Mutation {
  createUser(createUserInput: CreateUserDto!): User!
  deleteUser(email: String!): User!
  createPost(createPostInput: CreatePostDto!): Post!
  newPostView(newPostViewDto: NewPostViewDto!): PostViews!
}

input CreateUserDto {
  name: String!
  email: String!
  role: String!
}

input CreatePostDto {
  title: String!
  subTitle: String!
  text: String!
  userId: String!
  segmentType: String!
  userIds: [String!]
}

input NewPostViewDto {
  userId: String!
  postId: String!
}